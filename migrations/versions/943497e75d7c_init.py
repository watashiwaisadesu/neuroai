"""init

Revision ID: 943497e75d7c
Revises: 
Create Date: 2025-06-10 19:50:42.832373

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '943497e75d7c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('announcements',
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('version', sa.String(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('uid')
    )
    op.create_table('platform_prices',
    sa.Column('service_name', sa.String(), nullable=False),
    sa.Column('price_per_message', sa.Float(), nullable=False),
    sa.Column('fixed_price', sa.Float(), nullable=False),
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('service_name'),
    sa.UniqueConstraint('uid')
    )
    op.create_table('support_items',
    sa.Column('user_uid', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('subject', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('priority', sa.String(), nullable=False),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('uid')
    )
    op.create_index(op.f('ix_support_items_user_uid'), 'support_items', ['user_uid'], unique=False)
    op.create_table('users',
    sa.Column('role', sa.String(length=50), server_default='user', nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('user_type', sa.String(length=50), nullable=True),
    sa.Column('is_send_docs_to_jur_address', sa.Boolean(), nullable=True),
    sa.Column('company_name', sa.String(length=50), nullable=True),
    sa.Column('field_of_activity', sa.String(length=100), nullable=True),
    sa.Column('BIN', sa.String(length=100), nullable=True),
    sa.Column('legal_address', sa.String(length=100), nullable=True),
    sa.Column('contact', sa.String(length=150), nullable=True),
    sa.Column('phone_number', sa.String(length=25), nullable=True),
    sa.Column('registration_date', sa.Date(), nullable=True),
    sa.Column('crm_catalog_id', sa.Integer(), nullable=True),
    sa.Column('avatar_file_url', sa.String(length=255), nullable=True),
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('uid')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('bots',
    sa.Column('user_uid', sa.UUID(), nullable=False),
    sa.Column('bot_type', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('instructions', sa.Text(), nullable=True),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('tariff', sa.String(), nullable=True),
    sa.Column('auto_deduction', sa.Boolean(), nullable=True),
    sa.Column('max_response', sa.Integer(), nullable=True),
    sa.Column('top_p', sa.Float(), nullable=True),
    sa.Column('top_k', sa.Integer(), nullable=True),
    sa.Column('repetition_penalty', sa.Float(), nullable=True),
    sa.Column('generation_model', sa.String(), nullable=False),
    sa.Column('token_limit', sa.Integer(), nullable=True),
    sa.Column('tokens_left', sa.Integer(), nullable=True),
    sa.Column('crm_lead_id', sa.Integer(), nullable=True),
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_uid'], ['users.uid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('uid')
    )
    op.create_table('support_attachments',
    sa.Column('support_uid', sa.UUID(), nullable=False),
    sa.Column('file_url', sa.String(length=2048), nullable=False),
    sa.Column('file_name', sa.String(length=255), nullable=True),
    sa.Column('content_type', sa.String(length=100), nullable=True),
    sa.Column('size_bytes', sa.Integer(), nullable=True),
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['support_uid'], ['support_items.uid'], ),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('uid')
    )
    op.create_index(op.f('ix_support_attachments_support_uid'), 'support_attachments', ['support_uid'], unique=False)
    op.create_table('bot_documents',
    sa.Column('bot_uid', sa.UUID(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('content_type', sa.String(length=100), nullable=True),
    sa.Column('file_data', sa.LargeBinary(), nullable=True),
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['bot_uid'], ['bots.uid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('uid')
    )
    op.create_index(op.f('ix_bot_documents_bot_uid'), 'bot_documents', ['bot_uid'], unique=False)
    op.create_table('bot_participants',
    sa.Column('bot_uid', sa.UUID(), nullable=False),
    sa.Column('user_uid', sa.UUID(), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['bot_uid'], ['bots.uid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_uid'], ['users.uid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('uid')
    )
    op.create_index(op.f('ix_bot_participants_bot_uid'), 'bot_participants', ['bot_uid'], unique=False)
    op.create_index(op.f('ix_bot_participants_user_uid'), 'bot_participants', ['user_uid'], unique=False)
    op.create_table('bot_services',
    sa.Column('bot_uid', sa.UUID(), nullable=False),
    sa.Column('platform', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('linked_account_uid', sa.UUID(), nullable=True),
    sa.Column('service_details', sa.JSON(), nullable=True),
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['bot_uid'], ['bots.uid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('uid')
    )
    op.create_index(op.f('ix_bot_services_linked_account_uid'), 'bot_services', ['linked_account_uid'], unique=False)
    op.create_table('conversations',
    sa.Column('owner_uid', sa.UUID(), nullable=False),
    sa.Column('bot_uid', sa.UUID(), nullable=False),
    sa.Column('platform', sa.String(), nullable=False),
    sa.Column('sender_id', sa.String(), nullable=False),
    sa.Column('sender_number', sa.String(), nullable=True),
    sa.Column('sender_nickname', sa.String(), nullable=True),
    sa.Column('bot_name', sa.String(), nullable=True),
    sa.Column('crm_catalog_id', sa.Integer(), nullable=True),
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['bot_uid'], ['bots.uid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['owner_uid'], ['users.uid'], ),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('uid')
    )
    op.create_index(op.f('ix_conversations_bot_uid'), 'conversations', ['bot_uid'], unique=False)
    op.create_index(op.f('ix_conversations_owner_uid'), 'conversations', ['owner_uid'], unique=False)
    op.create_index(op.f('ix_conversations_platform'), 'conversations', ['platform'], unique=False)
    op.create_index(op.f('ix_conversations_sender_id'), 'conversations', ['sender_id'], unique=False)
    op.create_table('payments',
    sa.Column('bot_uid', sa.UUID(), nullable=False),
    sa.Column('user_uid', sa.UUID(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('payment_method', sa.String(), nullable=False),
    sa.Column('transaction_uid', sa.String(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['bot_uid'], ['bots.uid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_uid'], ['users.uid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('uid')
    )
    op.create_table('telegram_account_links',
    sa.Column('bot_uid', sa.UUID(), nullable=False),
    sa.Column('platform_user_uid', sa.UUID(), nullable=False),
    sa.Column('telegram_user_id', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('session_string', sa.Text(), nullable=True),
    sa.Column('phone_code_hash', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_connected_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['bot_uid'], ['bots.uid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['platform_user_uid'], ['users.uid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('uid')
    )
    op.create_index(op.f('ix_telegram_account_links_bot_uid'), 'telegram_account_links', ['bot_uid'], unique=False)
    op.create_index(op.f('ix_telegram_account_links_phone_number'), 'telegram_account_links', ['phone_number'], unique=True)
    op.create_index(op.f('ix_telegram_account_links_platform_user_uid'), 'telegram_account_links', ['platform_user_uid'], unique=False)
    op.create_index(op.f('ix_telegram_account_links_telegram_user_id'), 'telegram_account_links', ['telegram_user_id'], unique=True)
    op.create_table('messages',
    sa.Column('conversation_uid', sa.UUID(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('tokens_user', sa.Integer(), nullable=True),
    sa.Column('tokens_ai', sa.Integer(), nullable=True),
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['conversation_uid'], ['conversations.uid'], ),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('uid')
    )
    op.create_index(op.f('ix_messages_conversation_uid'), 'messages', ['conversation_uid'], unique=False)
    op.create_index(op.f('ix_messages_timestamp'), 'messages', ['timestamp'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_messages_timestamp'), table_name='messages')
    op.drop_index(op.f('ix_messages_conversation_uid'), table_name='messages')
    op.drop_table('messages')
    op.drop_index(op.f('ix_telegram_account_links_telegram_user_id'), table_name='telegram_account_links')
    op.drop_index(op.f('ix_telegram_account_links_platform_user_uid'), table_name='telegram_account_links')
    op.drop_index(op.f('ix_telegram_account_links_phone_number'), table_name='telegram_account_links')
    op.drop_index(op.f('ix_telegram_account_links_bot_uid'), table_name='telegram_account_links')
    op.drop_table('telegram_account_links')
    op.drop_table('payments')
    op.drop_index(op.f('ix_conversations_sender_id'), table_name='conversations')
    op.drop_index(op.f('ix_conversations_platform'), table_name='conversations')
    op.drop_index(op.f('ix_conversations_owner_uid'), table_name='conversations')
    op.drop_index(op.f('ix_conversations_bot_uid'), table_name='conversations')
    op.drop_table('conversations')
    op.drop_index(op.f('ix_bot_services_linked_account_uid'), table_name='bot_services')
    op.drop_table('bot_services')
    op.drop_index(op.f('ix_bot_participants_user_uid'), table_name='bot_participants')
    op.drop_index(op.f('ix_bot_participants_bot_uid'), table_name='bot_participants')
    op.drop_table('bot_participants')
    op.drop_index(op.f('ix_bot_documents_bot_uid'), table_name='bot_documents')
    op.drop_table('bot_documents')
    op.drop_index(op.f('ix_support_attachments_support_uid'), table_name='support_attachments')
    op.drop_table('support_attachments')
    op.drop_table('bots')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_support_items_user_uid'), table_name='support_items')
    op.drop_table('support_items')
    op.drop_table('platform_prices')
    op.drop_table('announcements')
    # ### end Alembic commands ###
